import numpy as np
import pyodbc
import pandas as pd
import warnings

warnings.filterwarnings("ignore")

cnx: pyodbc.Connection = pyodbc.connect(
    "Driver={ODBC Driver 17 for SQL Server};"
    "Server=DWH;"
    "Database=dwOper;"
    "Trusted_Connection=yes;")


query = f"""
SET NOCOUNT ON;
DROP TABLE IF EXISTS #High_users
SELECT PartnerUserID
INTO #High_users
FROM VIEW_PlatformPartnerUsers_TotogamingAm 
WHERE PartnerUserId in (101001723,101216960,100386115,101218635,101232841,100425853,101182835,101204615,100592414,100967492,101123469,101026459,100627134,100992819,101117546,101085147,100377590,100385431,100739883,100737473,101011384,100385216,100380240,101026564,101197329,101042287,100690173,100958746,101028323,100964378,100810875,101150627,101055012,101009345,100962927,101179877,100798256,100389143,100582270,100449938,100931315,100737700,101111851,101077945,101083746,100791495,101187169,100733848,100381283,100562820,100382804,100748557,100438696,100643988,101136282,100487657,101157818,101061858,100381617,101232349,101065580,100591781,100745906,100746019,100488204,100837881,100693236,100573071,100989796,101086064,100403086,101061058,100385449,101042516,100393065,100966201,100658887,100383062,100502104,101058206,101028066,100489931,100998702,100721831,100797377,100523751,101112332,100444980,100677547,100648225,100734345,100693244,100438199,100691043,101095709,101018016,101067245,101088122,100607571,100988015,101008587,100662813,100381774,101155304,100665993,100798128,100741725,101064819,101088267,100805053,100403605,101024294,100997163,100718930,101047694,101015943,100945431,100568925,100569076,100461388,100516436,101036621,100697170,100406529,100696476,100678471,100813289,101095725,100677520,100486550,100676394,100651109,100740084,100749981,100414503,100393630,101139764,100684744,100695840,100647981,100743945,101149749,100997922,100756178,100683442,100974642,100740357,100596871,101124543,100434811,100578492,100692919,101143044,101115781,101100516,101056956,100636598,101186770,100747361,101098306,101114375,101223229,101144502,100822703,100917263,100683804,100696038,101005949,100381567,100626422,100624107,100972263,100406049,100407961,100824597,100596928,100511258,100385038,100459152,101074383,100400649,100384888,100697111,100718840,100759438,100575916,100602623,100382813,100799244,101243870,100484922,100423147,100999873,100655257,100510796,101062698,100952563,100696174,100606143,100836363,100689488,100421815,101072504,100465889,100406887,100563541,100377722,100641762,101057177,100574851,101226094,101087973,101009903,100403448,101127542,100672029,100436063,100816975,100933925,100426657,100381338,100527752,100495582,101138533,101243817,101171988,100386912,101146534,101233487,100550359,100413935,100727348,100545530,100735142,100972027,100945669,100671848,100990558,100393936,101154399,100608540,100959402,101225071,101040284,100385227,101052656,100522059,100972921,100996336,100378704,101020775,100831177,101028551,100494663,100811887,101000669,100389984,100384995,100913978,100633333,101083332,101189259,100380628,100993803,100402161,100461129,100490411,101004426,100966159,100380837,100759349,101125327,100817804,101036536,100554401,100575445,101027480,101236514,101225879,100718937,100975898,100688538,101038871,101008520,100388711,100695523,100536673,100620758,100614463,100969497,100378065,100557892,101049284,100440405,100384483,100434880,100414142,101097537,100389621,101035937,100704298,101111417,100388644,100553464,100991873,101039743,100385187,100386512,100990561,100983487,100826671,100606391,101214240,100411336,101146740,100382073,101144135,100653377,101128971,100696315,100529933,101114045,100541208,101077293,101232228,101168894,101128644,100974842,100387272,100599755,100733295,100479492,100913620,100708866,100721321,101010094,100388821,100691408,101162627,100478363,100617201,101223315,101220080,100745038,100648649,100518774,101104307,100652486,100571956,100654224,101028812,100999696,101214505,100838807,100527875,100755551,101035177,100753518,100410189,100918736,100474985,100700376,100757931,101067227,100474223,100726137,101006069,100415960,100723217,100380713,100591912,100704924,100720211,101005414,100379466,100818399,100675690,101118947,101212505,101191786,100377721,100696138,100391269,100378558,100401575,100384145,100733164,100977045,100991594,101009024,101012732,100536123,101142517,100378852,101057827,100759454,100600333,100395809,100450968,100427901,100690228,101038238,100919635,100722723,100385278,100585273,101014205,100709032,100838195,100702720,100821889,100744070,100992886,100969822,100838958,100384678,101233745,100647620,101218957,101058352,100592355,100950130,100598586,100745345,100568761,101062205,100990957,101095951,101114768,100743606,100974671,100470628,100929633,101176723,100635112,100539669,100620523,101010014,101032887,100504408,100948567,100977814,100402796,101064043,101080368,100733693,101173537,100474038,100705008,101120220,100924810,101015173,100393209,100809759,101090168,100513123,100812489,100411491,101005324,100736450,100694442,100473746,100566354,101133983,100403170,100568264,100440958,100713382,100735033,100676444,100535606,100799025,101016548,100432541,101089719,100395972,100939801,100640246,100806223,100704552,101192534,100593477,101234748,100377556,101069501,101057674,100377872,101077406,100429135,100961697,100378410,100729582,101223110,100729829,100459358,100721631,100591428,100459960,101195158,101017399,100453862,100726378,100667592,101085787,101104180,100383346,100612044,100959121,100942150,101108041,100697448,101236414,101020575,100578120,100660583,100819704,100582885,100675880,100485277,100602709,100378928,100393944,100737267,100731979,100402383,100540992,101001587,100654577,100918387,101014061,100707783,100378290,100706598,100378090,100564553,100759047,100428737,100998350,101033213,101078858,100471100,100377730,101030194,101227703,101013554,100485827,100992913,100377809,100924803,100383755,100510140,100545953,101212556,100421252,100715310,100421218,100986978,100707629,100544501,100741219,101223863,100996246,101073919,100988789,100670680,100648667,100404189,101068077,100449150,101254891,100383244,100530563,100753494,100389477,100380074,100398793,100700628,100409289,101067151,101098947,100379370,101235110,100455460,100809782,100787074,100710663)
---------------------- CASINO ---------------------- 
DROP TABLE IF EXISTS #casino 
SELECT  
    cu.PartnerUserID TOTOID,  
    o.CalculationDate_DT Date 
INTO #casino 
FROM casino.orders o  
    INNER JOIN 
        VIEW_PlatformPartnerUsers_TotogamingAm cu 
            ON o.UserID = cu.UserID 
    INNER JOIN 
        #High_users hu
            ON hu.PartnerUserId = cu.PartnerUserId 
WHERE  
    o.CalculationDate_DT >= '2022-08-01'
    AND o.CalculationDate_DT < CAST(GETDATE() AS DATE) 
    AND o.OrderStateID  IN (2,3,5,6,8,9,10) 
    AND o.OperationTypeID in (3,299) 
    AND o.GameProviderId <> 3
GROUP BY 
    cu.PartnerUserID,  
    o.CalculationDate_DT

---------------------- SPORT ---------------------- 

DROP TABLE IF EXISTS #sport 
SELECT 
    su.PartnerUserID TOTOID,  
    o.CalculationDate_DT Date 
INTO #sport 
FROM  
    VIEW_sport_Orders_TotogamingAm o  
    INNER JOIN 
        VIEW_sport_PartnerUser_TotogamingAm su 
            ON o.UserID = su.UserID 
    INNER JOIN 
        #High_users hu
            ON hu.PartnerUserId = su.PartnerUserId 
WHERE  
    o.CalculationDate_DT >= '2022-08-01'
    AND o.CalculationDate_DT < CAST(GETDATE() AS DATE) 
    AND o.OrderStateID IN (2,3,5,6,8,9,10) 
GROUP BY  su.PartnerUserID,  
    o.CalculationDate_DT


SELECT * FROM #casino 

UNION  

SELECT * FROM #sport  
"""
df = pd.read_sql(query, cnx, index_col='TOTOID')
cnx.close()


final = pd.DataFrame()
for i in df.index.unique():
    temp = df[df.index == i].sort_values('Date')
    temp['Lag'] = 0
    lags = []
    for l in range(len(temp) - 1):
        date_1 = temp.iloc[l, 0]
        date_2 = temp.iloc[l + 1, 0]
        delta = date_2 - date_1
        temp.iloc[l+1, 1] = delta.days
    temp = temp.replace(0, None)
    final = pd.concat([final, temp])
    # bets_info_by_user.append({'TOTOID': i, 'AVGLag': np.mean(lags_bet)})


final = final.reset_index()
print(final)
