import pandas as pd
import numpy as np
import pyodbc as db
import warnings
from numpy.random import seed
from numpy.random import randn
from numpy.random import normal
from scipy.stats import ttest_ind
warnings.filterwarnings('ignore')

cnx: db.Connection = db.connect(
    "Driver={ODBC Driver 17 for SQL Server};"
    "Server=DWH;"
    "Database=dwOper;"
    "Trusted_Connection=yes;")

query = """
SET NOCOUNT ON;
DROP TABLE IF EXISTS #High_users
SELECT PartnerUserID
INTO #High_users
FROM VIEW_PlatformPartnerUsers_TotogamingAm
WHERE PartnerUserId IN (100677520,100741725,101098947,100378290,100381567,100401575,100393944,101027480,100453862,100596928,100929633,100913620,100739883,100749981,100837881,100635112,100641762,100378090,100415960,100474985,100478363,100757931,100759454,101143044,100651109,101033213,100518774,101067151,100707629,100624107,100696038,100553464,100562820,100575916,100591781,101220080,100733295,100917263,101095951,101111417,100406529,100421815,101005414,101018016,100432541,100484922,101058206,101065580,101080368,100591912,100608540,100563541,100574851,100966201,100727348,101136282,100702720,100378852,100389143,100582270,100989796,100461388,101061058,101074383,100805053,101114375,100831177,100529933,100607571,100715310,100733164,100838958,101014061,100461129,100494663,100510140,100530563,101057674,101088267,100676444,101173537,100975898,100633333,100393630,100991873,101028812,100671848,101226094,100414503,100413935,100402796,100414142,100997163,101035937,100684744,100678471,100720211,100578492,100745038,100746019,100378410,101039743,100569076,101168894,100924803,100964378,100736450,101100516,101118947,100654224,100385038,101047694,101067245,101078858,100726378,100557892,100568264,100573071,100950130,100972921,101120220,101128971,100696476,100386912,100992819,100996336,100428737,100444980,100600333,100966159,100726137,100729829,100740357,100838807,100377721,100662813,100696138,100389477,101004426,101011384,101028323,100592355,100620758,100582885,100948567,100389984,100384995,101035177,101073919,101087973,100695523,100718930,100961697,100737267,100648225,100652486,100655257,100660583,100380074,100380628,100709032,101000669,101008587,101009024,101016548,100536123,100536673,100377556,100377722,100400649,100988015,100377730,100479492,100527752,101062205,100706598,101225071,100554401,100566354,101112332,100385449,100385278,100438696,100691408,101061858,100672029,100718937,100745906,100931315,100647620,100667592,100380713,100585273,100378928,100402161,100385216,100822703,100824597,100421218,100998350,101040284,100700376,100952563,100969497,100759349,100913978,101144135,100809782,100810875,100379466,100993803,100489931,100836363,100539669,101064043,100675690,100695840,100748557,100753494,101115781,100381774,100819704,100386512,100411491,100988789,100992886,100485827,100545530,100708866,100798256,101133983,100380240,100449938,100697111,100471100,100544501,101089719,100787074,101187169,101214505,100974671,100939801,101154399,100648667,100812489,100379370,100388711,100383755,100406887,101028066,101058352,101162627,100918387,100933925,100735033,100743945,100756178,101146534,100696174,100382813,101001587,101015173,100568761,101216960,100983487,100734345,100919635,101114768,100636598,100440405,100486550,100527875,101077293,101176723,101191786,100974842,100731979,100627134,100384145,100384888,100406049,101009903,100429135,100438199,100523751,100599755,100602623,100677547,100744070,101128644,100791495,100811887,100707783,100434811,101072504,100705008,101179877,100743606,100759438,101150627,100391269,100740084,100991594,100997922,101028551,101032887,100427901,100377590,100440958,100459152,100545953,101083332,101149749,100640246,100658887,100700628,100575445,100665993,100421252,101026564,100490411,100495582,100510796,100675880,100945669,100799244,100643988,100696315,100381338,100818399,100395809,101005324,101012732,100474038,100593477,100598586,100578120,101197329,100962927,100729582,100747361,100647981,100654577,100385187,100393209,101009345,101020775,101085147,100692919,100721631,101223863,100564553,100568925,100924810,100745345,100918736,100459358,100403086,100384483,100713382,100487657,101010014,101049284,101055012,100694442,100550359,101098306,101127542,100797377,100385227,100410189,100425853,100541208,101068077,101090168,100606143,100723217,101212556,101052656,100393936,101195158,101157818,100384678,101212505,100407961,100683804,100436063,100411336,101218957,100592414,100473746,101233745,100535606,101010094,101171988,100676394,100388644,100450968,100817804,101038238,101146740,101095709,100617201,100602709,101223315,101057827,100403170,100377872,100378065,100816975,100513123,101233487,100977045,100693236,101042516,100402383,101225879,100380837,100999873,101234748,101236414,101020575,100522059,100721321,101083746,101057177,101056956,101036536,100974642,100426657,101042287,100395972,101214240,100733693,101104307,100998702,100990957,101017399,100434880,100798128,101192534,101227703,100378558,100516436,101236514,100614463,100387272,101114045,100759047,101232228,100972027,100704298,101097537,101232349,100958746,100735142,100626422,101008520,100403605,101117546,100809759,100969822,100653377,100648649,101015943,100620523,100449150,100404189,100383062,100382073,100755551,100996246,101124543,100799025,101069501,100753518,100388821,101138533,100690228,100999696,100689488,101026459,100990558,100670680,100383244,100721831,100977814,101125327,101038871,100722723,100504408,100737473,100403448,100409289,101077406,100511258,101064819,100688538,100606391,100502104,100704552,100470628,100378704,100733848,100990561,100389621,100806223,100596871,100423147,100693244,100474223,100838195,100704924,100826671,101030194,101014205,100459960,101006069,100945431,100967492,100465889,101155304,101186770,100591428,101067227,100571956,100697170,100718840,101142517,100821889,100386115,101013554,100741219,100683442,101085787,100385431,100691043,101086064,101062698,100540992,101104180,100383346,101254891,100612044,100382804,100959121,101139764,100986978,101144502,100377809,101001723,101077945,100381283,101204615,101243817,100942150,101108041,100992913,101036621,101095725,101243870,100697448,100485277,101123469,101005949,100381617,100393065,100813289,100455460,101024294,101088122,100398793,100710663,100993730,100387212,100929500,100692431,100484804,101247732,100611297,101050197,100481647,101186711,101010169,100748150,101235974,100387599,101209664,100405872,101242586,100721984,101253884,100378674,101197470,101255638,101083200,100918427,101254494,100725220,101034873,100706481,101152601,101172244,101210887,100516431,100756645,100903092,100505350,100608741,100523512,100384154,100990959,101014808,100653391,100380049,100821513,101023640,100595193,101036697,100733370,101126674,100627958,100652183,100983056,100385070,100719897,100798570,100434334,100706169,100411042,100703644,101109823,100451686,100728955,100718210,100915063,101109227,100469478,101089248,100436906,100474759,101084626,100754484,101103416,100522009,100752582,101123642,101131391,101045243,100703630,100679663,100558888,101201591,100811237,100676630,100444514,101131709,100584941,100575683,100744218,100480421,100386387,100728008,101008541,101099929,100532824,100536025,100435891,101183393,101051264,100387792,100960876,101106421,100442492,101142287,100484942,101210360,100386720,100412774,100480801,101141042,101080973,100382891,101234073,100401440,100573211,101237432,100378338,101136159,100544211,100578926,100909215,101233560,100667812,100675453,100617015,100619525,101102727,100742634,101114934,100626120,100971637,100812997,100734831,101174125,100652192,100477902,101043500,100556431,100609787,100832042,101127674)


SELECT u.PartnerUserId,
    o.CalculationDate_DT AS Date,
    SUM(o.StakeAmount) AS BetAmount,
    SUM(o.StakeAmount - o.WinAmount) AS GGR,
    COUNT(DISTINCT o.OrderID) AS Bets,
    'Sport' Platforms
FROM VIEW_sport_OrdersBetsStakes_TotogamingAm AS o
    INNER JOIN VIEW_sport_PartnerUser_TotogamingAm AS u ON u.UserID = o.UserID
    INNER JOIN #High_users hu ON hu.PartnerUserId = u.PartnerUserId
    INNER JOIN C_Game AS g ON g.GameID = o.GameID
    INNER JOIN C_GameProvider AS gp ON gp.GameProviderID = g.GameProviderID
    LEFT JOIN C_DeviceType d on d.DeviceTypeID = o.DeviceTypeID
    INNER JOIN dbo.DIM_Date dd ON dd.date = o.CalculationDate_DT   FULL OUTER JOIN VIEW_PlatformPartnerUsers_TotogamingAm cu ON cu.PartnerUserId = u.PartnerUserId
WHERE o.OrderStateID IN (2,3,5,6,8,9,10)
  AND o.CalculationDate_DT >= '2022-07-01'
  AND o.CalculationDate_DT  < CAST(GETDATE() as date)
  AND u.isDeleted NOT IN (1)

  AND o.DeviceTypeID NOT IN (1)
GROUP BY u.PartnerUserId,
    g.Name_en,
    gp.GameProviderName,
    o.CalculationDate_DT

UNION ALL

SELECT u.PartnerUserId,
    a.Date,
    a.BetAmount,
    a.GGR,
    a.Bets,
    'Casino' Platforms
    FROM
    (SELECT o.UserID,
            o.CalculationDate_DT Date,o.GameID,
    SUM((CASE WHEN g.GameProviderID IN (48, 10) AND o.TypeId IN (1, 5, 8, 18, 33) THEN o.OrderAmount
                WHEN g.GameProviderID NOT IN (48, 10) THEN o.OrderAmount ELSE 0 END)) BetAmount,
    SUM(CASE WHEN g.GameProviderID IN (48,10) AND o.TypeId = 1            THEN o.OrderAmount * o.Odds / 100
             WHEN g.GameProviderID IN (48,10) AND o.TypeId IN (5,8,18,33) THEN (o.OrderAmount - o.WinAmount)
             WHEN g.GameProviderID NOT IN (48,10)                         THEN (o.OrderAmount - o.WinAmount)
             ELSE 0
             END) GGR,
    COUNT(o.OrderID) Bets
    FROM casino.orders AS o
        INNER JOIN C_Game AS g on g.GameID=o.GameID
        INNER JOIN VIEW_PlatformPartnerUsers_TotogamingAm u on u.UserID = o.UserID
        INNER JOIN #High_users hu ON hu.PartnerUserId = u.PartnerUserId
        INNER JOIN dbo.DIM_Date dd ON dd.date = o.CalculationDate_DT
        WHERE o.CalculationDate_DT >= '2022-07-01'
          AND o.CalculationDate_DT  < CAST(GETDATE() as date)
          AND o.OperationTypeID IN (3,299)
          AND g.GameProviderID<>3
          AND o.OrderStateID IN (2,3,5,6,8,9,10) AND CASE WHEN g.GameProviderID IN (48, 10) THEN o.TypeId ELSE 0 END IN (0, 1, 5, 8, 18, 33)
    GROUP BY o.UserID,
        o.CalculationDate_DT,
        o.GameID) a
    INNER JOIN C_Game g on g.GameID = a.GameID
    INNER JOIN C_GameCategory gc on gc.GameCategoryID = g.GameCategoryID
    INNER JOIN C_GameProvider gp on gp.GameProviderID = g.GameProviderID
    INNER JOIN VIEW_PlatformPartnerUsers_TotogamingAm u on u.UserID = a.UserID
"""

df = pd.read_sql(query, cnx)
cnx.close()

users = pd.read_excel('Z:\\Analytics\\High Values Change Analysis\\High Users.xlsx')

users['Given High Status-Date'] = pd.to_datetime(users['Given High Status-Date'])
df['Date'] = pd.to_datetime(df['Date'])
df['PartnerUserId'] = df['PartnerUserId'].astype(int)

users_arr = []
t_stat_arr = []
p_value_arr =  []
for id in users.PartnerUserId:
    df_user = df[df['PartnerUserId'] == id]
    user_sample = users[users['PartnerUserId'] == id]
    anchor_date = user_sample['Given High Status-Date'].values[0]
    bet_amounts_after = df_user[df_user['Date'] >= anchor_date]['BetAmount'].values
    bet_amounts_before = df_user[df_user['Date'] < anchor_date]['BetAmount'].values
    t_stat, p_value = ttest_ind(bet_amounts_before, bet_amounts_after,)
    users_arr.append(id)
    t_stat_arr.append(t_stat)
    p_value_arr.append(p_value)

TTest = pd.DataFrame({'PartnerUserId': users_arr, 't-stat': t_stat_arr, 'p-value': p_value_arr})

anchor_date_arr = []
for user_id in df.PartnerUserId.values:
    date_ = users[users['PartnerUserId'] == int(user_id)].iloc[0, 0]
    anchor_date_arr.append(date_)

df['Anchor'] = anchor_date_arr

df['Before/After'] = df.apply(lambda row: 'After' if row['Date'] >= row['Anchor'] else 'Before', axis=1)

bet_amounts_all_before = df[df['Before/After']=='Before']['BetAmount'].values
bet_amounts_all_after = df[df['Before/After']=='After']['BetAmount'].values

t_stat, p_value = ttest_ind(bet_amounts_all_before, bet_amounts_all_after,)
print(t_stat)
print(p_value)

df['Global t_stat'] = t_stat
df['Global_p_value'] = p_value